{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "defaultValue": "GLSC-dev-urlshortener",
      "type": "string",
      "metadata": {
        "description": "Name used as base-template to name the resources to be deployed in Azure."
      }
    },
    "existingSWAName": {
      "type": "string",
      "defaultValue": "GLSC-dev-urlshortener-swa",
      "metadata": {
        "description": "Optional (SKIP-THIS-RESOURCE): If provided, this is name of the the already created Static Web App in this resource group. If not provided: API will be standalone"
      }
    },
    "swaLocation": {
      "allowedValues": [
        "centralus",
        "eastus2",
        "westus2"
      ],
      "type": "string",
      "metadata": {
        "description": "Static Web App location."
      }
    },
    "defaultRedirectUrl": {
      "defaultValue": "https://devaz.raiseright.com",
      "type": "string",
      "metadata": {
        "description": "Default URL used when key passed by the user is not found."
      }
    },
    "GitHubURL": {
      "type": "string",
      "defaultValue": "https://github.com/RaiseRight-LLC/AzUrlShortener.git",
      "metadata": {
        "description": "The URL of GitHub (ending by .git)"
      }
    },
    "GitHubBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "Name of the branch to use when deploying (Default = main)."
      }
    },
    "Environment": {
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "qa",
        "staging",
        "prod"
      ],
      "type": "string",
      "metadata": {
        "description": "Environment tag to be added for these resources."
      }
    }
  },
  "variables": {
    "funcAppName": "[toLower(concat(parameters('baseName'), '-fa'))]",
    "swaName": "[parameters('existingSWAName')]",
    "deployTinyBlazorAdmin": "[if(equals(parameters('existingSWAName'), 'SKIP-THIS-RESOURCE'), 'false', 'true')]",
    "storageAccountName": "glscdevurlshortenersa",
    "funcHostingPlanName": "[concat(parameters('baseName'), '-asp')]",
    "insightsAppName": "[concat(parameters('baseName'), '-ai')]",
    "websiteContentShare": "glscdevurlshortenerwcs"
  },
  "resources": [
    {
      "apiVersion": "2022-03-01",
      "name": "[variables('funcAppName')]",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "[parameters('Environment')]"
      },
      "dependsOn": [
        "[concat('microsoft.insights/components/', variables('insightsAppName'))]",
        "[concat('Microsoft.Web/serverfarms/', variables('funcHostingPlanName'))]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]"
      ],
      "properties": {
        "name": "[variables('funcAppName')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(concat('microsoft.insights/components/', variables('insightsAppName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(concat('microsoft.insights/components/', variables('insightsAppName')), '2015-05-01').ConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[variables('websiteContentShare')]"
            },
            {
              "name": "DataStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
            },
            {
              "name": "defaultRedirectUrl",
              "value": "[parameters('defaultRedirectUrl')]"
            }
          ]
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('funcHostingPlanName'))]",
        "use32BitWorkerProcess": true,
        "netFrameworkVersion": "v6.0",
        "clientAffinityEnabled": true
      },
      "resources": [
        {
          "apiVersion": "2022-03-01",
          "type": "sourcecontrols",
          "name": "web",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]"
          ],
          "properties": {
            "repoUrl": "[parameters('GitHubURL')]",
            "branch": "[parameters('GitHubBranch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', variables('funcAppName'), 'authsettingsV2')]",
      "properties": {
        "globalValidation": {
          "unauthenticatedClientAction": "AllowAnonymous"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]",
        "[resourceId('Microsoft.Web/staticSites', variables('swaName'))]",
        "[format('{0}/resourceGroups/{1}/providers/Microsoft.Web/staticSites/{2}/userProvidedFunctionApps/backend1', subscription().id, resourceGroup().name, variables('swaName'))]",
        "[format('{0}/resourceGroups/{1}/providers/Microsoft.Web/staticSites/{2}/linkedBackends/backend1', subscription().id, resourceGroup().name, variables('swaName'))]"
      ]
    },
    {
      "apiVersion": "2021-03-01",
      "name": "[variables('funcHostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "kind": "",
      "tags": {
        "environment": "[parameters('Environment')]"
      },
      "properties": {
        "name": "[variables('funcHostingPlanName')]",
        "computeMode": "Dynamic"
      },
      "sku": {
        "Tier": "Dynamic",
        "Name": "Y1"
      }
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('insightsAppName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "[parameters('Environment')]"
      },
      "kind": "",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('funcAppName')]",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-06-01",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "tags": {
        "displayName": "[variables('storageAccountName')]",
        "environment": "[parameters('Environment')]"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "condition": "[equals(toLower(variables('deployTinyBlazorAdmin')), 'true')]",
      "type": "Microsoft.Web/staticSites",
      "name": "[variables('swaName')]",
      "location": "[parameters('swaLocation')]",
      "apiVersion": "2022-03-01",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "tags": {
        "environment": "[parameters('Environment')]"
      },
      "properties": {
        "repositoryUrl": "[parameters('GitHubURL')]",
        "branch": "[parameters('GitHubBranch')]",
        "buildProperties": {
          "appLocation": "./src/Cloud5mins.ShortenerTools.TinyBlazorAdmin",
          "outputLocation": "wwwroot"
        },
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true,
        "provider": "GitHub",
        "enterpriseGradeCdnStatus": "Disabled"
      },
      "resources": [
        {
          "condition": "[equals(toLower(variables('deployTinyBlazorAdmin')), 'true')]",
          "type": "linkedBackends",
          "apiVersion": "2022-03-01",
          "name": "backend1",
          "dependsOn": [
            "[resourceId('Microsoft.Web/staticSites', variables('swaName'))]",
            "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]"
          ],
          "properties": {
            "backendResourceId": "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]",
            "region": "[resourceGroup().location]"
          }
        },
        {
          "condition": "[equals(toLower(variables('deployTinyBlazorAdmin')), 'true')]",
          "type": "userProvidedFunctionApps",
          "apiVersion": "2022-03-01",
          "name": "backend1",
          "dependsOn": [
            "[resourceId('Microsoft.Web/staticSites', variables('swaName'))]",
            "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]"
          ],
          "properties": {
            "functionAppResourceId": "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]",
            "functionAppRegion": "[resourceGroup().location]"
          }
        }
      ]
    },
    {
      "condition": "[equals(toLower(variables('deployTinyBlazorAdmin')), 'true')]",
      "type": "Microsoft.Web/staticSites/config",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', variables('swaName'), 'appsettings')]",
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('insightsAppName')), '2015-05-01').InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(concat('microsoft.insights/components/', variables('insightsAppName')), '2015-05-01').InstrumentationKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/staticSites', variables('swaName'))]"
      ]
    }
  ],
  "outputs": {}
}
